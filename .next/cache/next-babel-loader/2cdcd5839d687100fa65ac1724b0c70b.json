{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\uACF5\\uBD80\\\\NEXT\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBotto: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 44\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["D:/react공부/NEXT/front/components/PostCard.js"],"names":["React","useState","useCallback","useSelector","PropTypes","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","PostImages","CommentForm","PostCardContent","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","marginBotto","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport {RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\n\r\nconst PostCard = ({post}) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    },[]);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    },[]);\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return(\r\n        <div style={{marginBotto:20 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked ?\r\n                    <HeartTwoTone twoToneColor = \"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                    : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                                </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar= {<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title= {post.User.nickname}\r\n                    description = {<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post}/>\r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                   author={item.User.nickname}\r\n                                   avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                   content={item.content} \r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      User: PropTypes.object,\r\n      content: PropTypes.string,\r\n      createdAt: PropTypes.object,\r\n      Comments: PropTypes.arrayOf(PropTypes.object),\r\n      Images: PropTypes.arrayOf(PropTypes.object)\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}