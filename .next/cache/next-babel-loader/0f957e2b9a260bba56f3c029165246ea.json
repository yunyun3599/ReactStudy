{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport post from './post';\nconst initialState = {\n  user: {},\n  post: {}\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'HYDRATE':\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/react공부/NEXT/front/reducers/index.js"],"names":["HYDRATE","user","post","initialState","rootReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE,EADW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AASA,MAAME,WAAW,GAAI,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,6CAAWD,KAAX,GAAqBC,MAAM,CAACI,OAA5B;;AACJ;AACI,aAAOL,KAAP;AALR;AAOH,CARD;;AAUA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst initialState = {\r\n    user: {\r\n    },\r\n    post: {\r\n    }\r\n};\r\n\r\n\r\n\r\nconst rootReducer = ((state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'HYDRATE':\r\n            console.log('HYDRATE', action)\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}